# -*- coding: utf-8 -*-
"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ–≥–æ –±–æ—Ç–∞
"""
import os
import logging
from pathlib import Path

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
env_loaded = False
dotenv_available = False

try:
    from dotenv import load_dotenv
    dotenv_available = True
    env_path = Path(__file__).parent / '.env'
    
    logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª: {env_path}")
    
    if env_path.exists():
        logger.info(f"‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: {env_path}")
        result = load_dotenv(env_path)
        env_loaded = result
        logger.info(f"üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ .env: {result}")
    else:
        logger.warning(f"‚ö†Ô∏è .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {env_path}")
        
except ImportError:
    logger.warning("‚ö†Ô∏è python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env: {e}")

# API –∫–ª—é—á–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è -> –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', 'YOUR_TELEGRAM_BOT_TOKEN_HERE')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY', 'YOUR_OPENAI_API_KEY_HERE')

# –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫–ª—é—á–∞—Ö
if TELEGRAM_BOT_TOKEN != 'YOUR_TELEGRAM_BOT_TOKEN_HERE':
    logger.info(f"‚úÖ TELEGRAM_BOT_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω (–¥–ª–∏–Ω–∞: {len(TELEGRAM_BOT_TOKEN)})")
else:
    logger.warning("‚ö†Ô∏è TELEGRAM_BOT_TOKEN –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

if OPENAI_API_KEY != 'YOUR_OPENAI_API_KEY_HERE':
    logger.info(f"‚úÖ OPENAI_API_KEY –∑–∞–≥—Ä—É–∂–µ–Ω (–¥–ª–∏–Ω–∞: {len(OPENAI_API_KEY)})")
else:
    logger.warning("‚ö†Ô∏è OPENAI_API_KEY –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

# –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
logger.info(f"üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: dotenv={'‚úÖ' if dotenv_available else '‚ùå'}, env_loaded={'‚úÖ' if env_loaded else '‚ùå'}")

# –í–ê–ñ–ù–û: –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ .env —Ñ–∞–π–ª!
# –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ –∏—Ö –≤ git!
# 
# –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã:
# - Telegram Bot Token: https://t.me/BotFather
# - OpenAI API Key: https://platform.openai.com/api-keys

# –ü–∞–ø–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
DATA_DIR = os.getenv('DATA_DIR', 'bot_data')

# –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL = os.getenv('LOG_LEVEL', 'INFO')

# –§–∞–π–ª –ª–æ–≥–æ–≤
LOG_FILE = os.getenv('LOG_FILE', 'bot.log')

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π (UTC –≤—Ä–µ–º—è)
SCHEDULE = {
    'morning_weight': {'hour': 3, 'minute': 0},  # 6:00 –ú–°–ö
    'evening_summary': {'hour': 18, 'minute': 0},  # 21:00 –ú–°–ö
}

# –õ–∏–º–∏—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
VALIDATION_LIMITS = {
    'weight': {'min': 30, 'max': 300},
    'height': {'min': 100, 'max': 250},
    'age': {'min': 10, 'max': 120},
    'calories': {'min': 10, 'max': 5000},
}

# –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π
ACTIVITY_MULTIPLIER = 1.375  # –£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
GOAL_MULTIPLIERS = {
    'deficit': 0.8,   # -20% –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è
    'maintain': 1.0,  # –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞
    'surplus': 1.1,   # +10% –¥–ª—è –Ω–∞–±–æ—Ä–∞ –º–∞—Å—Å—ã
}
