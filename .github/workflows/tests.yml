name: Tests

on:
  push:
    branches: [ main, beer-fix, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Create .env file for tests
      run: |
        echo "TELEGRAM_BOT_TOKEN=test_token_for_ci" > .env
        echo "OPENAI_API_KEY=test_key_for_ci" >> .env
    
    - name: Run simple tests
      run: |
        python -m pytest tests/test_simple.py -v
    
    - name: Run smoke tests
      run: |
        python -m pytest tests/test_smoke.py -v
    
    - name: Run validation tests
      run: |
        python -m pytest tests/test_validation.py -v
    
    - name: Run BJU extraction tests
      run: |
        python -m pytest tests/test_bju_extraction.py -v
    
    - name: Run CI tests
      run: |
        python -m pytest tests/test_ci.py -v
    
    - name: Run all tests with coverage
      run: |
        python -m pytest tests/ -v --cov=. --cov-report=xml --cov-report=term
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
      if: matrix.python-version == '3.12'
      continue-on-error: true
