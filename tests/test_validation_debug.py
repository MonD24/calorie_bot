# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
"""
import sys
import logging
from pathlib import Path

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format='%(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('validation_debug.log', encoding='utf-8')
    ]
)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent))

from utils.calorie_calculator import extract_nutrition_smart
from utils.nutrition_validator import validate_nutrition_data, estimate_portion_calories


def test_gpt_response_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–≤–µ—Ç–∞ GPT —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    print("=== –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –û–¢–í–ï–¢–ê GPT –° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú ===")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç GPT –¥–ª—è –±–ª—é–¥–∞ —Å —Ñ–æ—Ç–æ
    test_responses = [
        # –¢–µ—Å—Ç 1: –û—Ç–≤–µ—Ç —Å –Ω—É–ª–µ–≤—ã–º–∏ –∂–∏—Ä–∞–º–∏ –∏ —É–≥–ª–µ–≤–æ–¥–∞–º–∏ (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–æ–±–ª–µ–º–µ)
        """–ù–∞ —Ñ–æ—Ç–æ –±–ª—é–¥–æ —Å –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–æ–π - –∫—É—Å–æ—á–∫–∏ –∂–∞—Ä–µ–Ω–æ–π –∫—É—Ä–∏—Ü—ã, —Ä–∏—Å, —è–π—Ü–æ, –º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—Ü—ã.

–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ ~120–≥: 165√ó1.2 = 198 –∫–∫–∞–ª, 37–≥ –±–µ–ª–∫–∞, 4–≥ –∂–∏—Ä–æ–≤, 0–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤
–ò–¢–û–ì–û: 198 –∫–∫–∞–ª, 37–≥ –±–µ–ª–∫–∞, 4–≥ –∂–∏—Ä–æ–≤, 0–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤""",
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        """–ù–∞ —Ñ–æ—Ç–æ –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å —Ä–∏—Å–æ–º - –∫—É—Å–æ—á–∫–∏ –∫—É—Ä–∏—Ü—ã, –ø–æ—Ä—Ü–∏—è —Ä–∏—Å–∞, —è–π—Ü–æ, –æ–≥—É—Ä—Ü—ã.

–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ ~120–≥: 165√ó1.2 = 198 –∫–∫–∞–ª, 37–≥ –±–µ–ª–∫–∞, 4–≥ –∂–∏—Ä–æ–≤, 0–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤
–†–∏—Å –æ—Ç–≤–∞—Ä–Ω–æ–π ~100–≥: 116√ó1.0 = 116 –∫–∫–∞–ª, 2.2–≥ –±–µ–ª–∫–∞, 0.5–≥ –∂–∏—Ä–æ–≤, 23–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤
–Ø–π—Ü–æ ~50–≥: 155√ó0.5 = 78 –∫–∫–∞–ª, 6.5–≥ –±–µ–ª–∫–∞, 5.5–≥ –∂–∏—Ä–æ–≤, 0.4–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤

–ò–¢–û–ì–û: 392 –∫–∫–∞–ª, 45.7–≥ –±–µ–ª–∫–∞, 10–≥ –∂–∏—Ä–æ–≤, 23.4–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤"""
    ]
    
    for i, response in enumerate(test_responses, 1):
        print(f"\n{'='*60}")
        print(f"–¢–ï–°–¢ {i}")
        print('='*60)
        print(f"–û—Ç–≤–µ—Ç GPT:\n{response}")
        print('\n' + '-'*40)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("üîç –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –î–ê–ù–ù–´–•:")
        nutrition = extract_nutrition_smart(response)
        
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        print("\nüîß –í–ê–õ–ò–î–ê–¶–ò–Ø:")
        description = "–±–ª—é–¥–æ —Å –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–æ–π"
        validated = validate_nutrition_data(nutrition, description)
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"–ò—Å—Ö–æ–¥–Ω–æ: {nutrition}")
        print(f"–ü–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {validated}")
        
        print(f"\nüéØ –ò–¢–û–ì:")
        print(f"–ö–∞–ª–æ—Ä–∏–∏: {nutrition.get('calories')} -> {validated.get('calories')}")
        print(f"–ë–µ–ª–∫–∏: {nutrition.get('protein')} -> {validated.get('protein')}")
        print(f"–ñ–∏—Ä—ã: {nutrition.get('fat')} -> {validated.get('fat')}")
        print(f"–£–≥–ª–µ–≤–æ–¥—ã: {nutrition.get('carbs')} -> {validated.get('carbs')}")


if __name__ == "__main__":
    test_gpt_response_processing()
    print(f"\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: validation_debug.log")
