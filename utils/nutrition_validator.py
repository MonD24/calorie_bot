# -*- coding: utf-8 -*-
"""
–í–∞–ª–∏–¥–∞—Ç–æ—Ä –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""
import logging
import re
from typing import Dict, Any, Optional, List


def validate_nutrition_data(nutrition: Dict[str, Any], description: str) -> Dict[str, Any]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –æ –ø–∏—Ç–∞–Ω–∏–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —è–≤–Ω—ã–µ –æ—à–∏–±–∫–∏
    """
    logging.info(f"üîß –í–ê–õ–ò–î–ê–¶–ò–Ø –Ω–∞—á–∞–ª–∞—Å—å –¥–ª—è '{description}'")
    logging.info(f"üîß –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {nutrition}")

    validated = nutrition.copy()
    warnings = []

    calories = nutrition.get('calories')
    protein = nutrition.get('protein')
    fat = nutrition.get('fat')
    carbs = nutrition.get('carbs')

    logging.info(f"üîß –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –∫–∞–ª–æ—Ä–∏–∏={calories}, –±–µ–ª–∫–∏={protein}, –∂–∏—Ä—ã={fat}, —É–≥–ª–µ–≤–æ–¥—ã={carbs}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ë–ñ–£ –∏ –∫–∞–ª–æ—Ä–∏–π
    if all(x is not None for x in [calories, protein, fat, carbs]):
        # –ö–∞–ª–æ—Ä–∏–∏ –∏–∑ –ë–ñ–£: –±–µ–ª–∫–∏ –∏ —É–≥–ª–µ–≤–æ–¥—ã = 4 –∫–∫–∞–ª/–≥, –∂–∏—Ä—ã = 9 –∫–∫–∞–ª/–≥
        calculated_calories = protein * 4 + fat * 9 + carbs * 4

        # –î–æ–ø—É—Å—Ç–∏–º–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ 30%
        # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å
        if calculated_calories > 0 and abs(calories - calculated_calories) / calculated_calories > 0.3:
            warnings.append(f"–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–ª–æ—Ä–∏–π: –∑–∞—è–≤–ª–µ–Ω–æ {calories}, –ø–æ –ë–ñ–£ {calculated_calories:.0f}")

            # –ï—Å–ª–∏ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—á–µ—Ç –ø–æ –ë–ñ–£
            if calories < calculated_calories * 0.6:
                validated['calories'] = int(calculated_calories)
                warnings.append(f"–ö–∞–ª–æ—Ä–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ {int(calculated_calories)}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ç–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ GPT
    description_lower = description.lower()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫
    has_chicken = any(word in description_lower for word in ['–∫—É—Ä–∏—Ü–∞', '–∫—É—Ä–∏–Ω–∞—è'])
    has_grain = any(word in description_lower for word in ['—Ä–∏—Å', '–±—É–ª–≥—É—Ä', '–≥—Ä–µ—á–∫–∞', '–º–∞–∫–∞—Ä–æ–Ω—ã'])
    logging.info(f"üîß –ö—É—Ä–∏—Ü–∞: {has_chicken}, –ì–∞—Ä–Ω–∏—Ä: {has_grain}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–∂–Ω—ã–µ –±–ª—é–¥–∞ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤)
    ingredients_found = _detect_ingredients(description_lower)
    ingredients_count = len(ingredients_found)
    logging.info(f"üîß –ù–∞–π–¥–µ–Ω–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: {ingredients_count} - {ingredients_found}")

    # –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ª–æ—Ä–∏–π –¥–ª—è –º–Ω–æ–≥–æ–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã—Ö –±–ª—é–¥
    if ingredients_count >= 3 and validated['calories'] and validated['calories'] < 400:
        logging.info(f"üîß –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–†–ò–ì–ì–ï–†: –û—á–µ–Ω—å –º–∞–ª–æ –∫–∞–ª–æ—Ä–∏–π –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –±–ª—é–¥–∞: {validated['calories']} –¥–ª—è {ingredients_count} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
        warnings.append(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò –º–∞–ª–æ –∫–∞–ª–æ—Ä–∏–π ({validated['calories']}) –¥–ª—è –±–ª—é–¥–∞ –∏–∑ {ingredients_count} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ ({', '.join(ingredients_found)})")

        # –î–ª—è –±–ª—é–¥ –∏–∑ 3+ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –º–∏–Ω–∏–º—É–º 400 –∫–∫–∞–ª
        min_calories = 400
        if has_chicken and has_grain:
            min_calories = 420  # –ö—É—Ä–∏—Ü–∞ + –≥–∞—Ä–Ω–∏—Ä + –¥—Ä—É–≥–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã

        validated['calories'] = max(validated['calories'], min_calories)
        warnings.append(f"–ö–∞–ª–æ—Ä–∏–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–≤–µ–ª–∏—á–µ–Ω—ã –¥–æ {validated['calories']}")
        logging.info(f"üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∫–∞–ª–æ—Ä–∏–∏ {validated['calories']} -> {validated['calories']}")

    elif ingredients_count >= 2 and validated['calories'] and validated['calories'] < 320:
        logging.info(f"üîß –¢–†–ò–ì–ì–ï–†: –ú–∞–ª–æ –∫–∞–ª–æ—Ä–∏–π –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –±–ª—é–¥–∞: {validated['calories']} –¥–ª—è {ingredients_count} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
        warnings.append(f"–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞–ª–æ –∫–∞–ª–æ—Ä–∏–π ({validated['calories']}) –¥–ª—è –±–ª—é–¥–∞ –∏–∑ {ingredients_count} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ ({', '.join(ingredients_found)})")
        estimated = estimate_portion_calories(description)
        logging.info(f"üîß –û—Ü–µ–Ω–æ—á–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏: {estimated}")

        # –î–ª—è 2+ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –º–∏–Ω–∏–º—É–º 320 –∫–∫–∞–ª
        min_suggested = max(320, estimated if estimated else 320)
        if min_suggested > validated['calories'] * 1.15:
            validated['calories'] = min_suggested
            warnings.append(f"–ö–∞–ª–æ—Ä–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ {min_suggested}")
            logging.info(f"üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∫–∞–ª–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞ {min_suggested}")

    # –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–ª—é–¥ —Å –∫—É—Ä–∏—Ü–µ–π
    has_egg = any(word in description_lower for word in ['—è–π—Ü'])

    if has_chicken and validated['calories'] and validated['calories'] < 420:
        logging.info(f"üîß –¢–†–ò–ì–ì–ï–†: –ë–ª—é–¥–æ —Å –∫—É—Ä–∏—Ü–µ–π, –º–∞–ª–æ –∫–∞–ª–æ—Ä–∏–π: {validated['calories']}")
        warnings.append(f"–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞–ª–æ –∫–∞–ª–æ—Ä–∏–π ({validated['calories']}) –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π")

        if has_grain and has_egg and ingredients_count >= 3:
            # –ö—É—Ä–∏—Ü–∞ + –≥–∞—Ä–Ω–∏—Ä + —è–π—Ü–æ + –æ–≤–æ—â–∏ = –º–∏–Ω–∏–º—É–º 420 –∫–∞–ª–æ—Ä–∏–π
            validated['calories'] = max(validated['calories'], 420)
            warnings.append(f"–ö–∞–ª–æ—Ä–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–æ {validated['calories']} –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–µ–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π")
            logging.info(f"üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∫–∞–ª–æ—Ä–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –æ–±–µ–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π -> {validated['calories']}")
        elif has_grain:
            # –ö—É—Ä–∏—Ü–∞ + –≥–∞—Ä–Ω–∏—Ä = –º–∏–Ω–∏–º—É–º 380 –∫–∞–ª–æ—Ä–∏–π
            validated['calories'] = max(validated['calories'], 380)
            warnings.append(f"–ö–∞–ª–æ—Ä–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–æ {validated['calories']} –¥–ª—è –∫—É—Ä–∏—Ü—ã —Å –≥–∞—Ä–Ω–∏—Ä–æ–º")
            logging.info(f"üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∫–∞–ª–æ—Ä–∏–∏ –∫—É—Ä–∏—Ü—ã —Å –≥–∞—Ä–Ω–∏—Ä–æ–º -> {validated['calories']}")
        else:
            # –ü—Ä–æ—Å—Ç–æ –∫—É—Ä–∏—Ü–∞ = –º–∏–Ω–∏–º—É–º 320 –∫–∞–ª–æ—Ä–∏–π
            validated['calories'] = max(validated['calories'], 320)
            warnings.append(f"–ö–∞–ª–æ—Ä–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–æ {validated['calories']} –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π")
            logging.info(f"üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∫–∞–ª–æ—Ä–∏–∏ —Å –∫—É—Ä–∏—Ü–µ–π -> {validated['calories']}")

    if '—Ç–≤–æ—Ä–æ–≥' in description_lower:
        # –¢–≤–æ—Ä–æ–≥: –ø—Ä–∏–º–µ—Ä–Ω–æ 100-180 –∫–∫–∞–ª/100–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∂–∏—Ä–Ω–æ—Å—Ç–∏
        if calories and calories < 80:  # –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞–ª–æ –¥–ª—è —Ç–≤–æ—Ä–æ–≥–∞
            warnings.append("–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–∏–∑–∫–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –¥–ª—è —Ç–≤–æ—Ä–æ–≥–∞")

        if protein and protein > 40:  # –í —Ç–≤–æ—Ä–æ–≥–µ –º–∞–∫—Å ~18–≥ –±–µ–ª–∫–∞/100–≥
            warnings.append("–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–Ω–æ–≥–æ –±–µ–ª–∫–∞ –¥–ª—è —Ç–≤–æ—Ä–æ–≥–∞")

    # –£–°–ò–õ–ï–ù–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–ª—é–¥ —Å –∫—É—Ä–∏—Ü–µ–π
    if any(word in description_lower for word in ['–∫—É—Ä–∏–Ω', '–∫—É—Ä–æ—á–∫']):
        logging.info(f"üîß –ü–†–û–í–ï–†–ö–ê –ë–ï–õ–ö–ê –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π")

        if protein is not None:
            # –í 100–≥ –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–∏ ~31–≥ –±–µ–ª–∫–∞, –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–æ—Ä—Ü–∏—è ~80–≥ = ~25–≥ –±–µ–ª–∫–∞
            if protein < 20:  # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ –±–µ–ª–∫–∞ –¥–ª—è –∫—É—Ä–∏—Ü—ã
                warnings.append(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò –º–∞–ª–æ –±–µ–ª–∫–∞ ({protein}–≥) –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π")
                estimated_protein = max(30, protein * 2.5)  # –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º
                validated['protein'] = min(estimated_protein, 45)  # –ù–æ –Ω–µ –±–æ–ª–µ–µ —Ä–∞–∑—É–º–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞
                warnings.append(f"–ë–µ–ª–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –¥–æ {validated['protein']}–≥")
                logging.info(f"üîß –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –±–µ–ª–∫–∞: {protein} -> {validated['protein']}")

            elif protein > 60:  # –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –±–µ–ª–∫–∞ –¥–∞–∂–µ –¥–ª—è –±–æ–ª—å—à–æ–π –ø–æ—Ä—Ü–∏–∏ –∫—É—Ä–∏—Ü—ã
                warnings.append(f"–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–Ω–æ–≥–æ –±–µ–ª–∫–∞ ({protein}–≥) –¥–ª—è –ø–æ—Ä—Ü–∏–∏ —Å –∫—É—Ä–∏—Ü–µ–π")
                validated['protein'] = 45  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑—É–º–Ω—ã–º –º–∞–∫—Å–∏–º—É–º–æ–º
                logging.info(f"üîß –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï –±–µ–ª–∫–∞: {protein} -> 45–≥")
        else:
            # –ï—Å–ª–∏ –±–µ–ª–æ–∫ –≤–æ–æ–±—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π
            warnings.append("–ë–µ–ª–æ–∫ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π - –¥–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
            validated['protein'] = 28.0
            logging.info(f"üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –±–µ–ª–∫–∞: None -> 28.0–≥")

    if '–±–∞–Ω–∞–Ω' in description_lower and calories and calories < 50:
        warnings.append("–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–∏–∑–∫–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –¥–ª—è –±–ª—é–¥–∞ —Å –±–∞–Ω–∞–Ω–æ–º")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–µ–¥–µ–ª—ã
    if protein is not None and protein < 0.5:
        validated['protein'] = 0.5
    if fat is not None and fat < 0.1:
        validated['fat'] = 0.1
    if carbs is not None and carbs < 0.5:
        validated['carbs'] = 0.5

    # –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –Ω—É–ª–µ–≤—ã—Ö –ë–ñ–£ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –±–ª—é–¥
    if ingredients_count >= 2 or has_chicken:
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º 0–≥ –∂–∏—Ä–æ–≤
        if fat is not None and fat <= 1.0:
            logging.info(f"üîß –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: {fat}–≥ –∂–∏—Ä–æ–≤ –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –±–ª—é–¥–∞")
            warnings.append(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò –º–∞–ª–æ –∂–∏—Ä–æ–≤ ({fat}–≥) –¥–ª—è –±–ª—é–¥–∞ –∏–∑ {ingredients_count} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
            # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∂–∏—Ä—ã –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π –∏ —è–π—Ü–æ–º
            if has_chicken and any(word in description_lower for word in ['—è–π—Ü']):
                validated['fat'] = max(fat, 8.0)  # –ö—É—Ä–∏—Ü–∞ + —è–π—Ü–æ = –º–∏–Ω–∏–º—É–º 8–≥ –∂–∏—Ä–æ–≤
            else:
                validated['fat'] = max(fat, 4.0)  # –ú–∏–Ω–∏–º—É–º –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª–æ–∂–Ω–æ–≥–æ –±–ª—é–¥–∞
            logging.info(f"üîß –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∂–∏—Ä—ã -> {validated['fat']}–≥")

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–∞–ª–æ —É–≥–ª–µ–≤–æ–¥–æ–≤ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≥–∞—Ä–Ω–∏—Ä–∞
        if carbs is not None and carbs <= 5.0 and has_grain:
            logging.info(f"üîß –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: {carbs}–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≥–∞—Ä–Ω–∏—Ä–∞")
            warnings.append(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ò –º–∞–ª–æ —É–≥–ª–µ–≤–æ–¥–æ–≤ ({carbs}–≥) –¥–ª—è –±–ª—é–¥–∞ —Å –≥–∞—Ä–Ω–∏—Ä–æ–º")
            # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã –¥–ª—è –±–ª—é–¥–∞ —Å —Ä–∏—Å–æ–º/–±—É–ª–≥—É—Ä–æ–º
            validated['carbs'] = max(carbs, 20.0)
            logging.info(f"üîß –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: —É–≥–ª–µ–≤–æ–¥—ã -> {validated['carbs']}–≥")

    # –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –¥–ª—è –±–ª—é–¥–∞ "—Å –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–æ–π" (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Å–ª—É—á–∞–µ)
    if description_lower == "–±–ª—é–¥–æ —Å –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–æ–π":
        logging.info(f"üîß –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è: '{description}'")

        # –ï—Å–ª–∏ –∂–∏—Ä—ã 0 –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ - —ç—Ç–æ —Ç–æ—á–Ω–æ –æ—à–∏–±–∫–∞ GPT
        if fat is not None and fat <= 1.0:
            validated['fat'] = 6.0  # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ –¥–ª—è –∫—É—Ä–∏—Ü—ã —Å –≥–∞—Ä–Ω–∏—Ä–æ–º
            warnings.append(f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏—Ä–æ–≤ –¥–ª—è '{description}': {fat} -> 6.0–≥")
            logging.info(f"üîß –°–ü–ï–¶–ö–û–†–†–ï–ö–¶–ò–Ø: –∂–∏—Ä—ã -> 6.0–≥")

        # –ï—Å–ª–∏ —É–≥–ª–µ–≤–æ–¥—ã —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤–∏–¥–∏–º–æ–≥–æ –≥–∞—Ä–Ω–∏—Ä–∞ - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
        if carbs is not None and carbs <= 10.0:
            validated['carbs'] = 18.0  # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ –¥–ª—è –ø–æ—Ä—Ü–∏–∏ –≥–∞—Ä–Ω–∏—Ä–∞
            warnings.append(f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≥–ª–µ–≤–æ–¥–æ–≤ –¥–ª—è '{description}': {carbs} -> 18.0–≥")
            logging.info(f"üîß –°–ü–ï–¶–ö–û–†–†–ï–ö–¶–ò–Ø: —É–≥–ª–µ–≤–æ–¥—ã -> 18.0–≥")

        # –ï—Å–ª–∏ –∫–∞–ª–æ—Ä–∏–∏ –º–µ–Ω—å—à–µ 300 - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º (—ç—Ç–æ —Å–ª–æ–∂–Ω–æ–µ –±–ª—é–¥–æ —Å –≥–∞—Ä–Ω–∏—Ä–æ–º)
        if validated.get('calories') is not None and validated['calories'] < 300:
            validated['calories'] = 350  # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ –¥–ª—è –∫—É—Ä–∏—Ü—ã —Å –≥–∞—Ä–Ω–∏—Ä–æ–º –∏ –æ–≤–æ—â–∞–º–∏
            warnings.append(f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª–æ—Ä–∏–π –¥–ª—è '{description}': {validated['calories']} -> 350 –∫–∫–∞–ª")
            logging.info(f"üîß –°–ü–ï–¶–ö–û–†–†–ï–ö–¶–ò–Ø: –∫–∞–ª–æ—Ä–∏–∏ -> 350 –∫–∫–∞–ª")

        # –ï—Å–ª–∏ –±–µ–ª–æ–∫ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –¥–ª—è –±–ª—é–¥–∞ —Å –∫—É—Ä–∏—Ü–µ–π - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
        if protein is not None and protein < 15.0:
            validated['protein'] = 32.0  # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ –¥–ª—è –ø–æ—Ä—Ü–∏–∏ –∫—É—Ä–∏—Ü—ã (~100-120–≥)
            warnings.append(f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–ª–∫–∞ –¥–ª—è '{description}': {protein} -> 32.0–≥")
            logging.info(f"üîß –°–ü–ï–¶–ö–û–†–†–ï–ö–¶–ò–Ø: –±–µ–ª–æ–∫ -> 32.0–≥")

    # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    if warnings:
        logging.warning(f"üîß –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∏—Ç–∞–Ω–∏—è –¥–ª—è '{description}': {'; '.join(warnings)}")

    logging.info(f"üîß –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {validated}")
    return validated


def estimate_portion_calories(description: str, ingredients: list = None) -> Optional[int]:
    """
    –û—Ü–µ–Ω–∏–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω—É—é –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è
    """
    description_lower = description.lower()
    estimated_calories = 0

    # –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –∏—Ö —Ç–∏–ø–∏—á–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –Ω–∞ –ø–æ—Ä—Ü–∏—é
    food_calories = {
        '—Ç–≤–æ—Ä–æ–≥': 150,  # ~100–≥ –ø–æ—Ä—Ü–∏—è
        '–±–∞–Ω–∞–Ω': 90,    # —Å—Ä–µ–¥–Ω–∏–π –±–∞–Ω–∞–Ω
        '—è–π—Ü–æ': 70,     # 1 —è–π—Ü–æ
        '–∫—É—Ä–∏—Ü–∞': 200,  # ~120–≥ –ø–æ—Ä—Ü–∏—è
        '–∫—É—Ä–∏–Ω–∞—è': 200,  # ~120–≥ –ø–æ—Ä—Ü–∏—è
        '—Ä–∏—Å': 130,     # –ø–æ—Ä—Ü–∏—è –≤–∞—Ä–µ–Ω–æ–≥–æ
        '–±—É–ª–≥—É—Ä': 130,  # –ø–æ—Ä—Ü–∏—è –≤–∞—Ä–µ–Ω–æ–≥–æ
        '–≥—Ä–µ—á–∫–∞': 120,  # –ø–æ—Ä—Ü–∏—è –≤–∞—Ä–µ–Ω–æ–π
        '–º–∞–∫–∞—Ä–æ–Ω—ã': 140, # –ø–æ—Ä—Ü–∏—è –≤–∞—Ä–µ–Ω—ã—Ö
        '—Ö–ª–µ–±': 80,     # –∫—É—Å–æ–∫
        '–º–∞—Å–ª–æ': 100,   # —Å—Ç. –ª–æ–∂–∫–∞
        '–∞—Ä–∞—Ö–∏—Å–æ–≤–∞—è –ø–∞—Å—Ç–∞': 120,  # ~2 —Å—Ç.–ª.
        '–ø–∞—Å—Ç–∞': 120,   # –∞—Ä–∞—Ö–∏—Å–æ–≤–∞—è/–æ—Ä–µ—Ö–æ–≤–∞—è –ø–∞—Å—Ç–∞
        '–æ—Ä–µ—Ö': 100,    # –≥–æ—Ä—Å—Ç—å –æ—Ä–µ—Ö–æ–≤
        '–¥–∂–µ–º': 60,     # –ª–æ–∂–∫–∞ –¥–∂–µ–º–∞
        '–≤–∞—Ä–µ–Ω—å–µ': 60,  # –ª–æ–∂–∫–∞ –≤–∞—Ä–µ–Ω—å—è
        '–º–µ–¥': 80,      # –ª–æ–∂–∫–∞ –º–µ–¥–∞
        '–æ–≥—É—Ä—Ü—ã': 15,   # –Ω–µ—Å–∫–æ–ª—å–∫–æ —à—Ç—É–∫
        '–ø–æ–º–∏–¥–æ—Ä—ã': 25, # –Ω–µ—Å–∫–æ–ª—å–∫–æ —à—Ç—É–∫
        '–ø–µ—Ä–µ—Ü': 10,    # –Ω–µ–º–Ω–æ–≥–æ
        '–ª—É–∫': 20,      # –Ω–µ–º–Ω–æ–≥–æ
        '—Å–æ—É—Å': 50,     # –ø–æ—Ä—Ü–∏—è —Å–æ—É—Å–∞
    }

    for food, cal in food_calories.items():
        if food == '–∞—Ä–∞—Ö–∏—Å–æ–≤–∞—è –ø–∞—Å—Ç–∞':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–∞—Ö–∏—Å–æ–≤—É—é –ø–∞—Å—Ç—É —á–µ—Ä–µ–∑ regex —Å —É—á–µ—Ç–æ–º –ø–∞–¥–µ–∂–µ–π
            peanut_paste_pattern = r'–∞—Ä–∞—Ö–∏—Å–æ–≤[–∞-—è]*.*?–ø–∞—Å—Ç[–∞-—è]*|–ø–∞—Å—Ç[–∞-—è]*.*?–∞—Ä–∞—Ö–∏—Å–æ–≤[–∞-—è]*'
            if re.search(peanut_paste_pattern, description_lower):
                estimated_calories += cal
        elif food in description_lower:
            estimated_calories += cal

    # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    if '—Å–∞–ª–∞—Ç' in description_lower and estimated_calories < 200:
        estimated_calories += 100  # –∑–∞–ø—Ä–∞–≤–∫–∞, –æ–≤–æ—â–∏

    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    has_cottage_cheese = re.search(r'—Ç–≤–æ—Ä–æ–≥[–∞-—è]*', description_lower)
    has_banana = re.search(r'–±–∞–Ω–∞–Ω[–∞-—è]*', description_lower)
    has_peanut_paste = re.search(r'–∞—Ä–∞—Ö–∏—Å–æ–≤[–∞-—è]*.*?–ø–∞—Å—Ç[–∞-—è]*|–ø–∞—Å—Ç[–∞-—è]*.*?–∞—Ä–∞—Ö–∏—Å–æ–≤[–∞-—è]*', description_lower)
    has_chicken = re.search(r'–∫—É—Ä–∏–Ω[–∞-—è]*|–∫—É—Ä–æ—á–∫[–∞-—è]*', description_lower)
    has_grain = any(grain in description_lower for grain in ['—Ä–∏—Å', '–±—É–ª–≥—É—Ä', '–≥—Ä–µ—á–∫–∞', '–º–∞–∫–∞—Ä–æ–Ω—ã'])

    if has_cottage_cheese and has_banana:
        if has_peanut_paste:
            estimated_calories = max(estimated_calories, 400)  # —Ç–≤–æ—Ä–æ–≥ + –±–∞–Ω–∞–Ω + –ø–∞—Å—Ç–∞
        else:
            estimated_calories = max(estimated_calories, 280)  # –º–∏–Ω–∏–º—É–º –¥–ª—è —Ç–≤–æ—Ä–æ–≥–∞ —Å –±–∞–Ω–∞–Ω–æ–º

    # –ö—É—Ä–∏—Ü–∞ —Å –≥–∞—Ä–Ω–∏—Ä–æ–º - –º–∏–Ω–∏–º—É–º 350 –∫–∞–ª–æ—Ä–∏–π
    if has_chicken and has_grain:
        estimated_calories = max(estimated_calories, 350)

    # –ö—É—Ä–∏—Ü–∞ —Å –æ–≤–æ—â–∞–º–∏ –∏ —è–π—Ü–æ–º - –º–∏–Ω–∏–º—É–º 300 –∫–∞–ª–æ—Ä–∏–π
    if has_chicken and any(word in description_lower for word in ['—è–π—Ü', '–æ–≥—É—Ä—Ü', '–ø–æ–º–∏–¥–æ—Ä']):
        estimated_calories = max(estimated_calories, 320)

    if any(word in description_lower for word in ['–ø–∞—Å—Ç–∞', '–º–∞—Å–ª–æ']) and estimated_calories > 0:
        estimated_calories += 50  # –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏ –æ—Ç –∂–∏—Ä–Ω—ã—Ö –¥–æ–±–∞–≤–æ–∫

    return estimated_calories if estimated_calories > 50 else None


def _detect_ingredients(description_lower: str) -> List[str]:
    """–î–µ—Ç–µ–∫—Ç–∏—Ä—É–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –±–ª—é–¥–∞ —Å —É—á–µ—Ç–æ–º –ø–∞–¥–µ–∂–µ–π"""
    ingredients_found = []

    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    simple_ingredients = {
        '—Ç–≤–æ—Ä–æ–≥': r'—Ç–≤–æ—Ä–æ–≥[–∞-—è]*',
        '–±–∞–Ω–∞–Ω': r'–±–∞–Ω–∞–Ω[–∞-—è]*',
        '—è–π—Ü–æ': r'—è–π—Ü[–∞-—è]*',
        '–∫—É—Ä–∏—Ü–∞': r'–∫—É—Ä–∏–Ω[–∞-—è]*|–∫—É—Ä–æ—á–∫[–∞-—è]*',
        '—Ä–∏—Å': r'—Ä–∏—Å[–∞-—è]*',
        '–±—É–ª–≥—É—Ä': r'–±—É–ª–≥—É—Ä[–∞-—è]*',
        '–≥—Ä–µ—á–∫–∞': r'–≥—Ä–µ—á–∫[–∞-—è]*',
        '–º–∞–∫–∞—Ä–æ–Ω—ã': r'–º–∞–∫–∞—Ä–æ–Ω[–∞-—è]*',
        '–º—è—Å–æ': r'–º—è—Å[–∞-—è]*',
        '–æ–≥—É—Ä—Ü—ã': r'–æ–≥—É—Ä—Ü[–∞-—è]*',
        '–ø–æ–º–∏–¥–æ—Ä—ã': r'–ø–æ–º–∏–¥–æ—Ä[–∞-—è]*|—Ç–æ–º–∞—Ç[–∞-—è]*',
        '–ø–µ—Ä–µ—Ü': r'–ø–µ—Ä—Ü[–∞-—è]*',
        '–ª—É–∫': r'–ª—É–∫[–∞-—è]*',
        '–º–æ—Ä–∫–æ–≤—å': r'–º–æ—Ä–∫–æ–≤[–∞-—è]*',
        '–∫–∞–ø—É—Å—Ç–∞': r'–∫–∞–ø—É—Å—Ç[–∞-—è]*',
        '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å': r'–∫–∞—Ä—Ç–æ—Ñ–µ–ª[–∞-—è]*|–∫–∞—Ä—Ç–æ—à–∫[–∞-—è]*',
        '–º–∞—Å–ª–æ': r'–º–∞—Å–ª[–∞-—è]*',
        '—Å—ã—Ä': r'—Å—ã—Ä[–∞-—è]*',
        '—Ö–ª–µ–±': r'—Ö–ª–µ–±[–∞-—è]*',
        '—Å–æ—É—Å': r'—Å–æ—É—Å[–∞-—è]*'
    }

    for ingredient, pattern in simple_ingredients.items():
        if re.search(pattern, description_lower):
            ingredients_found.append(ingredient)

    # –°–ª–æ–∂–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—Å–æ—Å—Ç–∞–≤–Ω—ã–µ)
    peanut_paste_pattern = r'–∞—Ä–∞—Ö–∏—Å–æ–≤[–∞-—è]*.*?–ø–∞—Å—Ç[–∞-—è]*|–ø–∞—Å—Ç[–∞-—è]*.*?–∞—Ä–∞—Ö–∏—Å–æ–≤[–∞-—è]*'
    if re.search(peanut_paste_pattern, description_lower):
        ingredients_found.append('–∞—Ä–∞—Ö–∏—Å–æ–≤–∞—è –ø–∞—Å—Ç–∞')

    # –î—Ä—É–≥–∏–µ –¥–æ–±–∞–≤–∫–∏
    elif any(word in description_lower for word in ['–º–∞—Å–ª–æ', '–æ—Ä–µ—Ö', '–¥–∂–µ–º', '–≤–∞—Ä–µ–Ω—å–µ', '–º–µ–¥']):
        ingredients_found.append('–¥–æ–±–∞–≤–∫–∞')

    return ingredients_found
